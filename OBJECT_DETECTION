images/Russian_Blue_8.jpg
images/miniature_pinscher_134.jpg
images/pomeranian_102.jpg
images/saint_bernard_108.jpg
images/miniature_pinscher_85.jpg
images/havanese_194.jpg
images/Birman_69.jpg
images/staffordshire_bull_terrier_43.jpg
images/Egyptian_Mau_198.jpg
images/newfoundland_183.jpg
images/miniature_pinscher_141.jpg
images/Birman_67.jpg
images/leonberger_107.jpg
images/pomeranian_127.jpg
images/german_shorthaired_127.jpg
images/Egyptian_Mau_79.jpg
images/saint_bernard_73.jpg
images/chihuahua_160.jpg
images/leonberger_18.jpg
images/Sphynx_92.jpg
images/Ragdoll_146.jpg
images/scottish_terrier_143.jpg
images/basset_hound_75.jpg
images/pug_159.jpg
images/newfoundland_175.jpg
images/Bombay_116.jpg
images/Sphynx_57.jpg
images/Siamese_188.jpg
images/great_pyrenees_156.jpg
images/boxer_14.jpg
images/Russian_Blue_137.jpg
images/beagle_6.jpg
images/leonberger_39.jpg
images/Sphynx_230.jpg
images/chihuahua_152.jpg
images/miniature_pinscher_123.jpg
images/pomeranian_190.jpg
images/Sphynx_40.jpg
images/Egyptian_Mau_196.jpg
images/american_pit_bull_terrier_166.jpg
images/Russian_Blue_113.jpg
images/beagle_5.jpg
images/Maine_Coon_35.jpg
images/keeshond_97.jpg
images/leonberger_184.jpg
images/samoyed_111.jpg
images/newfoundland_65.jpg
images/yorkshire_terrier_83.jpg
images/saint_bernard_35.jpg
images/Bombay_184.jpg
images/miniature_pinscher_89.jpg
images/japanese_chin_34.jpg
images/Persian_192.jpg
images/Egyptian_Mau_71.jpg
images/yorkshire_terrier_110.jpg
images/Egyptian_Mau_140.jpg
images/Bombay_194.jpg
images/beagle_122.jpg
images/shiba_inu_126.jpg
images/Persian_69.jpg
images/german_shorthaired_82.jpg
images/Russian_Blue_108.jpg
images/yorkshire_terrier_46.jpg
images/boxer_184.jpg
images/Russian_Blue_122.jpg
images/samoyed_24.jpg
images/keeshond_143.jpg
images/Siamese_233.jpg
images/english_setter_15.jpg
images/boxer_32.jpg
images/german_shorthaired_141.jpg
images/english_cocker_spaniel_8.jpg
images/leonberger_128.jpg
images/pomeranian_186.jpg
images/Sphynx_169.jpg
images/leonberger_172.jpg
images/beagle_194.jpg
images/japanese_chin_43.jpg
images/english_cocker_spaniel_40.jpg
images/havanese_102.jpg
images/Siamese_227.jpg
images/scottish_terrier_128.jpg
images/basset_hound_160.jpg
images/miniature_pinscher_30.jpg
images/miniature_pinscher_122.jpg
images/Siamese_189.jpg
images/Maine_Coon_25.jpg
images/Siamese_57.jpg
images/havanese_79.jpg
images/american_bulldog_10.jpg
images/Maine_Coon_52.jpg
images/miniature_pinscher_58.jpg
images/japanese_chin_111.jpg
images/beagle_164.jpg
images/scottish_terrier_62.jpg
images/wheaten_terrier_91.jpg
images/beagle_63.jpg
images/havanese_59.jpg
images/Birman_85.jpg
images/Persian_98.jpg
images/american_pit_bull_terrier_124.jpg
images/Siamese_126.jpg
images/boxer_182.jpg
images/pomeranian_200.jpg
images/yorkshire_terrier_191.jpg
images/shiba_inu_176.jpg
images/Abyssinian_20.jpg
images/Bengal_9.jpg
images/leonberger_50.jpg
images/basset_hound_188.jpg
images/havanese_63.jpg
images/american_bulldog_120.jpg
images/Bombay_120.jpg
images/yorkshire_terrier_116.jpg
images/British_Shorthair_115.jpg
images/yorkshire_terrier_105.jpg
images/Russian_Blue_264.jpg
images/Egyptian_Mau_133.jpg
images/keeshond_163.jpg
images/newfoundland_51.jpg
images/wheaten_terrier_8.jpg
images/yorkshire_terrier_4.jpg
images/havanese_193.jpg
images/Maine_Coon_159.jpg
images/Bombay_12.jpg
images/pomeranian_176.jpg
images/saint_bernard_12.jpg
images/keeshond_197.jpg
images/american_bulldog_38.jpg
images/yorkshire_terrier_175.jpg
images/boxer_190.jpg
images/english_cocker_spaniel_89.jpg
images/pomeranian_143.jpg
images/english_setter_161.jpg
images/havanese_6.jpg
images/chihuahua_74.jpg
images/Abyssinian_24.jpg
images/British_Shorthair_99.jpg
images/British_Shorthair_178.jpg
images/keeshond_160.jpg
images/Bengal_116.jpg
images/Persian_137.jpg
images/staffordshire_bull_terrier_202.jpg
images/german_shorthaired_38.jpg
images/great_pyrenees_33.jpg
images/Persian_52.jpg
images/shiba_inu_45.jpg
images/german_shorthaired_15.jpg
images/Sphynx_130.jpg
images/havanese_192.jpg
images/Maine_Coon_245.jpg
images/Bombay_63.jpg
images/great_pyrenees_85.jpg
images/Abyssinian_216.jpg
images/Ragdoll_99.jpg
images/pomeranian_2.jpg
images/Siamese_23.jpg
images/Siamese_209.jpg
images/Persian_102.jpg
images/beagle_62.jpg
images/scottish_terrier_46.jpg
images/basset_hound_167.jpg
images/german_shorthaired_32.jpg
images/Siamese_178.jpg
images/Persian_1.jpg
images/leonberger_64.jpg
images/saint_bernard_131.jpg
images/yorkshire_terrier_79.jpg
images/staffordshire_bull_terrier_67.jpg
images/saint_bernard_45.jpg
images/staffordshire_bull_terrier_188.jpg
images/British_Shorthair_239.jpg
images/japanese_chin_90.jpg
images/newfoundland_95.jpg
images/yorkshire_terrier_23.jpg
images/shiba_inu_155.jpg
images/miniature_pinscher_44.jpg
images/Russian_Blue_31.jpg
images/german_shorthaired_79.jpg
images/British_Shorthair_17.jpg
images/Siamese_20.jpg
images/miniature_pinscher_131.jpg
images/basset_hound_146.jpg
images/newfoundland_157.jpg
images/Russian_Blue_125.jpg
images/Maine_Coon_36.jpg
images/staffordshire_bull_terrier_163.jpg
images/miniature_pinscher_10.jpg
images/miniature_pinscher_37.jpg
images/pug_124.jpg
images/Russian_Blue_89.jpg
images/english_setter_114.jpg
images/Bombay_47.jpg
images/chihuahua_39.jpg
images/american_pit_bull_terrier_73.jpg
images/Sphynx_160.jpg
images/samoyed_33.jpg
images/Sphynx_116.jpg
images/Siamese_18.jpg
images/basset_hound_178.jpg
images/miniature_pinscher_78.jpg
images/Bombay_182.jpg
images/keeshond_53.jpg
images/english_setter_166.jpg
images/american_bulldog_68.jpg
images/shiba_inu_209.jpg
images/Abyssinian_148.jpg
images/japanese_chin_62.jpg
images/Bombay_166.jpg
images/Russian_Blue_211.jpg
images/chihuahua_132.jpg
images/saint_bernard_152.jpg
images/Russian_Blue_33.jpg
images/german_shorthaired_86.jpg
images/saint_bernard_107.jpg
images/chihuahua_46.jpg
images/Bombay_214.jpg
images/Ragdoll_42.jpg
images/Abyssinian_176.jpg
images/leonberger_33.jpg
images/Russian_Blue_156.jpg
images/boxer_143.jpg
images/havanese_55.jpg
images/boxer_166.jpg
images/Persian_161.jpg
images/staffordshire_bull_terrier_124.jpg
images/scottish_terrier_5.jpg
images/japanese_chin_163.jpg
images/pomeranian_183.jpg
images/beagle_187.jpg
images/english_cocker_spaniel_122.jpg
images/saint_bernard_199.jpg
images/american_bulldog_5.jpg
images/newfoundland_189.jpg
images/wheaten_terrier_109.jpg
images/wheaten_terrier_82.jpg
images/shiba_inu_121.jpg
images/Bombay_78.jpg
images/Bengal_64.jpg
images/staffordshire_bull_terrier_126.jpg
images/american_pit_bull_terrier_58.jpg
images/Persian_54.jpg
images/Bengal_65.jpg
images/Bengal_18.jpg
images/Maine_Coon_80.jpg
images/pomeranian_22.jpg
images/Maine_Coon_187.jpg
images/Russian_Blue_44.jpg
images/american_bulldog_33.jpg
images/leonberger_8.jpg
images/leonberger_103.jpg
images/american_pit_bull_terrier_161.jpg
images/wheaten_terrier_53.jpg
images/shiba_inu_92.jpg
images/scottish_terrier_94.jpg
images/yorkshire_terrier_25.jpg
images/newfoundland_111.jpg
images/pomeranian_126.jpg
images/Siamese_21.jpg
images/shiba_inu_78.jpg
images/basset_hound_6.jpg
images/japanese_chin_167.jpg
images/pug_45.jpg
images/great_pyrenees_129.jpg
images/beagle_76.jpg
images/beagle_45.jpg
images/wheaten_terrier_146.jpg
images/saint_bernard_194.jpg
images/Ragdoll_30.jpg
images/english_setter_50.jpg
images/chihuahua_8.jpg
images/chihuahua_57.jpg
images/Bengal_39.jpg
images/great_pyrenees_81.jpg
images/german_shorthaired_179.jpg
images/boxer_118.jpg
images/miniature_pinscher_167.jpg
images/samoyed_7.jpg
images/saint_bernard_132.jpg
images/pug_114.jpg
images/shiba_inu_159.jpg
images/Sphynx_17.jpg
images/basset_hound_138.jpg
images/Egyptian_Mau_27.jpg
images/Sphynx_128.jpg
images/Persian_181.jpg
images/yorkshire_terrier_174.jpg
images/Russian_Blue_153.jpg
images/Maine_Coon_83.jpg
images/great_pyrenees_2.jpg
images/chihuahua_130.jpg
images/shiba_inu_172.jpg
images/great_pyrenees_101.jpg
images/beagle_190.jpg
images/shiba_inu_32.jpg
images/saint_bernard_68.jpg
images/samoyed_4.jpg
images/havanese_186.jpg
images/Sphynx_186.jpg
images/Siamese_249.jpg
images/Sphynx_8.jpg
images/Abyssinian_159.jpg
images/pug_189.jpg
images/Birman_101.jpg
images/leonberger_41.jpg
images/samoyed_106.jpg
images/yorkshire_terrier_1.jpg
images/newfoundland_179.jpg
images/Bengal_14.jpg
images/Egyptian_Mau_106.jpg
images/samoyed_55.jpg
images/wheaten_terrier_14.jpg
images/Maine_Coon_77.jpg
images/shiba_inu_165.jpg
images/yorkshire_terrier_90.jpg
images/miniature_pinscher_18.jpg
images/Egyptian_Mau_31.jpg
images/yorkshire_terrier_133.jpg
images/Ragdoll_177.jpg
images/great_pyrenees_123.jpg
images/japanese_chin_10.jpg
images/Sphynx_25.jpg
images/Siamese_147.jpg
images/Siamese_247.jpg
images/Bombay_169.jpg
images/shiba_inu_72.jpg
images/basset_hound_156.jpg
images/Maine_Coon_75.jpg
images/german_shorthaired_39.jpg
images/Ragdoll_98.jpg
images/newfoundland_21.jpg
images/wheaten_terrier_136.jpg
images/Abyssinian_36.jpg
images/boxer_187.jpg
images/Abyssinian_180.jpg
images/beagle_195.jpg
images/shiba_inu_95.jpg
images/Sphynx_165.jpg
images/Bombay_193.jpg
images/chihuahua_127.jpg
images/havanese_32.jpg
images/pug_38.jpg
images/Siamese_203.jpg
images/american_bulldog_57.jpg
images/Birman_95.jpg
images/pug_121.jpg
images/beagle_141.jpg
images/staffordshire_bull_terrier_70.jpg
images/British_Shorthair_36.jpg
images/beagle_169.jpg
images/staffordshire_bull_terrier_76.jpg
images/yorkshire_terrier_173.jpg
images/beagle_3.jpg
images/Abyssinian_52.jpg
images/staffordshire_bull_terrier_58.jpg
images/havanese_13.jpg
images/Bombay_172.jpg
images/Persian_103.jpg
images/boxer_1.jpg
images/pomeranian_29.jpg
images/saint_bernard_105.jpg
images/leonberger_187.jpg
images/Abyssinian_1.jpg
images/Maine_Coon_89.jpg
images/Birman_64.jpg
images/scottish_terrier_17.jpg
images/boxer_168.jpg
images/Bengal_33.jpg
images/english_setter_159.jpg
images/american_pit_bull_terrier_46.jpg
images/japanese_chin_162.jpg
images/Birman_117.jpg
images/chihuahua_148.jpg
images/Siamese_80.jpg
images/basset_hound_9.jpg
images/Birman_192.jpg
images/english_setter_130.jpg
images/newfoundland_125.jpg
images/american_bulldog_82.jpg
images/wheaten_terrier_44.jpg
images/leonberger_130.jpg
images/Maine_Coon_157.jpg
images/american_pit_bull_terrier_2.jpg
images/Siamese_75.jpg
images/scottish_terrier_149.jpg
images/great_pyrenees_175.jpg
images/newfoundland_195.jpg
images/Abyssinian_47.jpg
images/pug_106.jpg
images/Bengal_173.jpg
images/japanese_chin_82.jpg
images/chihuahua_54.jpg
images/Siamese_56.jpg
images/scottish_terrier_108.jpg
images/Siamese_131.jpg
images/japanese_chin_110.jpg
images/scottish_terrier_53.jpg
images/pug_65.jpg
images/Egyptian_Mau_134.jpg
images/newfoundland_135.jpg
images/Siamese_138.jpg
images/samoyed_87.jpg
images/pomeranian_128.jpg
images/english_setter_18.jpg
images/great_pyrenees_10.jpg
images/leonberger_90.jpg
images/newfoundland_154.jpg
images/great_pyrenees_37.jpg
images/shiba_inu_3.jpg
images/Bengal_127.jpg
images/scottish_terrier_33.jpg
images/Abyssinian_161.jpg
images/german_shorthaired_42.jpg
images/english_cocker_spaniel_118.jpg
images/saint_bernard_32.jpg
images/boxer_162.jpg
images/Maine_Coon_207.jpg
images/Bombay_93.jpg
images/scottish_terrier_115.jpg
images/Bengal_29.jpg
images/japanese_chin_69.jpg
images/Birman_109.jpg
images/boxer_71.jpg
images/yorkshire_terrier_66.jpg
images/British_Shorthair_92.jpg
images/english_cocker_spaniel_92.jpg
images/keeshond_130.jpg
images/Egyptian_Mau_190.jpg
images/pug_133.jpg
images/Birman_42.jpg
images/Egyptian_Mau_40.jpg
images/german_shorthaired_74.jpg
images/Bombay_118.jpg
images/Abyssinian_178.jpg
images/wheaten_terrier_196.jpg
images/miniature_pinscher_184.jpg
images/Siamese_174.jpg
images/german_shorthaired_125.jpg
images/basset_hound_171.jpg
images/Persian_44.jpg
images/Sphynx_167.jpg
images/saint_bernard_130.jpg
images/american_bulldog_133.jpg
images/japanese_chin_87.jpg
images/havanese_109.jpg
images/staffordshire_bull_terrier_12.jpg
images/japanese_chin_70.jpg
images/beagle_109.jpg
images/scottish_terrier_183.jpg
images/english_cocker_spaniel_20.jpg
images/newfoundland_2.jpg
images/saint_bernard_121.jpg
images/Bengal_105.jpg
images/Abyssinian_206.jpg
images/japanese_chin_41.jpg
images/Ragdoll_171.jpg
images/keeshond_41.jpg
images/japanese_chin_128.jpg
images/english_setter_78.jpg
images/american_bulldog_109.jpg
images/staffordshire_bull_terrier_97.jpg
images/Birman_83.jpg
images/shiba_inu_91.jpg
images/miniature_pinscher_98.jpg
images/Siamese_88.jpg
images/english_cocker_spaniel_166.jpg
images/Ragdoll_186.jpg
images/Russian_Blue_222.jpg
images/yorkshire_terrier_18.jpg
images/pug_67.jpg
images/havanese_191.jpg
images/Egyptian_Mau_222.jpg
images/shiba_inu_40.jpg
images/Maine_Coon_9.jpg
images/saint_bernard_62.jpg
images/havanese_4.jpg
images/miniature_pinscher_113.jpg
images/Ragdoll_176.jpg
images/Siamese_100.jpg
images/staffordshire_bull_terrier_166.jpg
images/chihuahua_82.jpg
images/pomeranian_82.jpg
images/Bombay_181.jpg
images/american_pit_bull_terrier_8.jpg
images/keeshond_175.jpg
images/leonberger_81.jpg
images/great_pyrenees_87.jpg
images/pomeranian_59.jpg
images/Siamese_153.jpg
images/Siamese_125.jpg
images/american_pit_bull_terrier_67.jpg
images/american_bulldog_190.jpg
images/staffordshire_bull_terrier_42.jpg
images/english_cocker_spaniel_19.jpg
images/Russian_Blue_16.jpg
images/Persian_104.jpg
images/Russian_Blue_74.jpg
images/american_bulldog_26.jpg
images/British_Shorthair_3.jpg
images/Bombay_109.jpg
images/Persian_84.jpg
images/english_setter_13.jpg
images/Ragdoll_126.jpg
images/japanese_chin_118.jpg
images/saint_bernard_148.jpg
images/keeshond_89.jpg
images/staffordshire_bull_terrier_154.jpg
images/leonberger_89.jpg
images/Russian_Blue_124.jpg
images/basset_hound_17.jpg
images/american_pit_bull_terrier_26.jpg
images/boxer_104.jpg
images/pug_128.jpg
images/Persian_80.jpg
images/english_cocker_spaniel_49.jpg
images/basset_hound_118.jpg
images/great_pyrenees_128.jpg
images/Russian_Blue_155.jpg
images/Ragdoll_145.jpg
images/wheaten_terrier_102.jpg
images/chihuahua_100.jpg
images/american_pit_bull_terrier_198.jpg
images/Abyssinian_63.jpg
images/american_bulldog_166.jpg
images/german_shorthaired_27.jpg
images/staffordshire_bull_terrier_2.jpg
images/Bombay_46.jpg
images/Ragdoll_208.jpg
images/Abyssinian_114.jpg
images/pomeranian_168.jpg
images/german_shorthaired_37.jpg
images/leonberger_16.jpg
images/newfoundland_180.jpg
images/german_shorthaired_173.jpg
images/Siamese_237.jpg
images/newfoundland_193.jpg
images/great_pyrenees_34.jpg
images/basset_hound_66.jpg
images/samoyed_6.jpg
images/newfoundland_59.jpg
images/leonberger_197.jpg
images/Egyptian_Mau_42.jpg
images/Maine_Coon_96.jpg
images/Maine_Coon_60.jpg
images/Siamese_228.jpg
images/Sphynx_105.jpg
images/Egyptian_Mau_20.jpg
images/Egyptian_Mau_170.jpg
images/pug_122.jpg
images/great_pyrenees_14.jpg
images/american_pit_bull_terrier_80.jpg
images/British_Shorthair_185.jpg
images/american_pit_bull_terrier_65.jpg
images/Bengal_111.jpg
images/Siamese_36.jpg
images/yorkshire_terrier_80.jpg
images/samoyed_50.jpg
images/Egyptian_Mau_8.jpg
images/Russian_Blue_178.jpg
images/japanese_chin_183.jpg
images/staffordshire_bull_terrier_59.jpg
images/japanese_chin_152.jpg
images/Ragdoll_185.jpg
images/Russian_Blue_202.jpg
images/Sphynx_30.jpg
images/yorkshire_terrier_42.jpg
images/english_cocker_spaniel_37.jpg
images/scottish_terrier_182.jpg
images/Persian_197.jpg
images/Sphynx_9.jpg
images/Maine_Coon_247.jpg
images/Abyssinian_172.jpg
images/Egyptian_Mau_182.jpg
images/staffordshire_bull_terrier_4.jpg
images/english_setter_154.jpg
images/wheaten_terrier_183.jpg
images/Maine_Coon_27.jpg
images/leonberger_157.jpg
images/great_pyrenees_57.jpg
images/shiba_inu_183.jpg
images/english_setter_80.jpg
images/Siamese_254.jpg
images/beagle_160.jpg
images/Egyptian_Mau_150.jpg
images/Egyptian_Mau_130.jpg
images/Egyptian_Mau_92.jpg
images/keeshond_68.jpg
images/Birman_48.jpg
images/staffordshire_bull_terrier_129.jpg
images/Ragdoll_107.jpg
images/wheaten_terrier_4.jpg
images/Siamese_257.jpg
images/basset_hound_12.jpg
images/Maine_Coon_249.jpg
images/english_cocker_spaniel_126.jpg
images/boxer_12.jpg
images/British_Shorthair_151.jpg
images/japanese_chin_7.jpg
images/boxer_57.jpg
images/Persian_75.jpg
images/miniature_pinscher_63.jpg
images/miniature_pinscher_139.jpg
images/Abyssinian_119.jpg
images/basset_hound_175.jpg
images/chihuahua_171.jpg
images/shiba_inu_59.jpg
images/Sphynx_33.jpg
images/Maine_Coon_84.jpg
images/american_bulldog_125.jpg
images/leonberger_40.jpg
images/great_pyrenees_46.jpg
images/pug_123.jpg
images/shiba_inu_7.jpg
images/Persian_190.jpg
images/havanese_163.jpg
images/basset_hound_84.jpg
images/Siamese_72.jpg
images/Russian_Blue_101.jpg
images/Russian_Blue_95.jpg
images/Abyssinian_21.jpg
images/german_shorthaired_121.jpg
images/keeshond_150.jpg
images/Maine_Coon_110.jpg
images/newfoundland_144.jpg
images/wheaten_terrier_65.jpg
images/havanese_19.jpg
images/samoyed_109.jpg
images/pug_197.jpg
images/english_cocker_spaniel_154.jpg
images/wheaten_terrier_150.jpg
images/Bengal_74.jpg
images/staffordshire_bull_terrier_144.jpg
images/Russian_Blue_192.jpg
images/scottish_terrier_54.jpg
images/english_cocker_spaniel_2.jpg
images/japanese_chin_97.jpg
images/wheaten_terrier_93.jpg
images/Sphynx_96.jpg
images/great_pyrenees_112.jpg
images/Birman_143.jpg
images/english_setter_146.jpg
images/samoyed_194.jpg
images/Bengal_47.jpg
images/pomeranian_141.jpg
images/samoyed_27.jpg
images/Birman_149.jpg
images/english_setter_98.jpg
images/pomeranian_188.jpg
images/Birman_182.jpg
images/wheaten_terrier_111.jpg
images/shiba_inu_105.jpg
images/newfoundland_148.jpg
images/Maine_Coon_158.jpg
images/pomeranian_84.jpg
images/leonberger_60.jpg
images/Persian_202.jpg
images/english_cocker_spaniel_83.jpg
images/Abyssinian_182.jpg
images/pug_95.jpg
images/keeshond_71.jpg
images/havanese_124.jpg
images/havanese_47.jpg
images/great_pyrenees_78.jpg
images/Russian_Blue_170.jpg
images/english_cocker_spaniel_58.jpg
images/Persian_43.jpg
images/american_bulldog_34.jpg
images/yorkshire_terrier_169.jpg
images/chihuahua_33.jpg
images/chihuahua_24.jpg
images/english_setter_163.jpg
images/yorkshire_terrier_135.jpg
images/newfoundland_16.jpg
images/samoyed_67.jpg
images/german_shorthaired_64.jpg
images/samoyed_49.jpg
images/Ragdoll_16.jpg
images/shiba_inu_137.jpg
images/chihuahua_16.jpg
images/wheaten_terrier_159.jpg
images/japanese_chin_18.jpg
images/keeshond_95.jpg
images/Siamese_115.jpg
images/english_cocker_spaniel_55.jpg
images/chihuahua_64.jpg
images/Sphynx_78.jpg
images/Russian_Blue_165.jpg
images/american_pit_bull_terrier_181.jpg
images/yorkshire_terrier_193.jpg
images/Bombay_85.jpg
images/samoyed_157.jpg
images/Bombay_74.jpg
images/Ragdoll_4.jpg
images/english_cocker_spaniel_175.jpg
images/chihuahua_53.jpg
images/basset_hound_29.jpg
images/shiba_inu_64.jpg
images/beagle_95.jpg
images/yorkshire_terrier_136.jpg
images/Maine_Coon_238.jpg
images/japanese_chin_182.jpg
images/pug_35.jpg
images/yorkshire_terrier_132.jpg
images/shiba_inu_146.jpg
images/american_pit_bull_terrier_131.jpg
images/Bombay_99.jpg
images/pomeranian_48.jpg
images/beagle_55.jpg
images/Bombay_64.jpg
images/Bombay_176.jpg
images/wheaten_terrier_13.jpg
images/samoyed_59.jpg
images/Russian_Blue_187.jpg
images/german_shorthaired_13.jpg
images/saint_bernard_72.jpg
images/shiba_inu_55.jpg
images/Sphynx_21.jpg
images/saint_bernard_163.jpg
images/great_pyrenees_147.jpg
images/Bombay_163.jpg
images/great_pyrenees_83.jpg
images/Egyptian_Mau_89.jpg
images/Ragdoll_258.jpg
images/Maine_Coon_197.jpg
images/american_bulldog_37.jpg
images/newfoundland_133.jpg
images/wheaten_terrier_110.jpg
images/chihuahua_118.jpg
images/samoyed_44.jpg
images/samoyed_124.jpg
images/great_pyrenees_124.jpg
images/scottish_terrier_174.jpg
images/wheaten_terrier_5.jpg
images/german_shorthaired_138.jpg
images/newfoundland_29.jpg
images/saint_bernard_172.jpg
images/Bombay_20.jpg
images/english_setter_102.jpg
images/leonberger_29.jpg
images/pug_99.jpg
images/english_setter_74.jpg
images/american_bulldog_141.jpg
images/Maine_Coon_206.jpg
images/staffordshire_bull_terrier_44.jpg
images/beagle_64.jpg
images/miniature_pinscher_183.jpg
images/Abyssinian_123.jpg
images/staffordshire_bull_terrier_131.jpg
images/english_cocker_spaniel_98.jpg
images/german_shorthaired_126.jpg
images/Siamese_156.jpg
images/shiba_inu_29.jpg
images/german_shorthaired_107.jpg
images/boxer_158.jpg
images/Maine_Coon_78.jpg
images/Bombay_104.jpg
images/havanese_91.jpg
images/pug_20.jpg
images/newfoundland_129.jpg
images/shiba_inu_43.jpg
images/shiba_inu_200.jpg
images/chihuahua_129.jpg
images/Egyptian_Mau_51.jpg
images/scottish_terrier_168.jpg
images/english_setter_148.jpg
images/staffordshire_bull_terrier_179.jpg
images/Sphynx_176.jpg
images/Egyptian_Mau_179.jpg
images/Abyssinian_71.jpg
images/american_bulldog_150.jpg
images/samoyed_97.jpg
images/boxer_191.jpg
images/japanese_chin_101.jpg
images/pug_29.jpg
images/great_pyrenees_188.jpg
images/english_cocker_spaniel_131.jpg
images/Siamese_208.jpg
images/Russian_Blue_212.jpg
images/pug_12.jpg
images/Egyptian_Mau_138.jpg
images/keeshond_21.jpg
images/boxer_128.jpg
images/newfoundland_94.jpg
images/american_pit_bull_terrier_142.jpg
images/pug_82.jpg
images/yorkshire_terrier_101.jpg
images/beagle_184.jpg
images/pug_148.jpg
images/boxer_160.jpg
images/japanese_chin_179.jpg
images/miniature_pinscher_125.jpg
images/great_pyrenees_180.jpg
images/Siamese_232.jpg
images/havanese_98.jpg
images/samoyed_12.jpg
images/miniature_pinscher_176.jpg
images/havanese_187.jpg
images/chihuahua_150.jpg
images/scottish_terrier_69.jpg
images/english_cocker_spaniel_69.jpg
images/Bombay_158.jpg
images/Bombay_157.jpg
images/yorkshire_terrier_122.jpg
images/samoyed_125.jpg
images/beagle_174.jpg
images/Birman_82.jpg
images/keeshond_59.jpg
images/japanese_chin_89.jpg
images/great_pyrenees_35.jpg
images/havanese_76.jpg
images/japanese_chin_49.jpg
images/english_setter_4.jpg
images/beagle_26.jpg
images/japanese_chin_71.jpg
images/scottish_terrier_97.jpg
images/Ragdoll_60.jpg
images/Maine_Coon_204.jpg
images/Maine_Coon_176.jpg
images/pug_72.jpg
images/Egyptian_Mau_104.jpg
images/saint_bernard_36.jpg
images/British_Shorthair_88.jpg
images/great_pyrenees_160.jpg
images/chihuahua_17.jpg
images/Ragdoll_27.jpg
images/Ragdoll_202.jpg
images/pug_24.jpg
images/beagle_166.jpg
images/american_pit_bull_terrier_143.jpg
images/saint_bernard_18.jpg
images/pomeranian_68.jpg
images/Siamese_109.jpg
images/British_Shorthair_204.jpg
images/saint_bernard_61.jpg
images/havanese_87.jpg
images/american_bulldog_202.jpg
images/scottish_terrier_80.jpg
images/scottish_terrier_161.jpg
images/great_pyrenees_168.jpg
images/scottish_terrier_82.jpg
images/keeshond_65.jpg
images/Birman_44.jpg
images/american_bulldog_8.jpg
images/shiba_inu_60.jpg
images/Ragdoll_260.jpg
images/american_pit_bull_terrier_119.jpg
images/Bengal_197.jpg
images/leonberger_194.jpg
images/havanese_31.jpg
images/german_shorthaired_94.jpg
images/chihuahua_44.jpg
images/boxer_192.jpg
images/Siamese_47.jpg
images/Siamese_19.jpg
images/havanese_103.jpg
images/japanese_chin_21.jpg
images/saint_bernard_169.jpg
images/wheaten_terrier_9.jpg
images/havanese_90.jpg
images/havanese_136.jpg
images/english_setter_101.jpg
images/basset_hound_25.jpg
images/saint_bernard_127.jpg
images/japanese_chin_96.jpg
images/pug_92.jpg
images/shiba_inu_62.jpg
images/Maine_Coon_219.jpg
images/Egyptian_Mau_2.jpg
images/chihuahua_147.jpg
images/Sphynx_142.jpg
images/great_pyrenees_111.jpg
images/havanese_196.jpg
images/Birman_128.jpg
images/Bombay_39.jpg
images/shiba_inu_178.jpg
images/boxer_72.jpg
images/miniature_pinscher_153.jpg
images/great_pyrenees_125.jpg
images/keeshond_85.jpg
images/saint_bernard_157.jpg
images/Birman_43.jpg
images/yorkshire_terrier_134.jpg
images/american_pit_bull_terrier_77.jpg
images/pomeranian_30.jpg
images/newfoundland_35.jpg
images/Egyptian_Mau_219.jpg
images/pomeranian_23.jpg
images/basset_hound_199.jpg
images/Bombay_220.jpg
images/german_shorthaired_41.jpg
images/Bombay_53.jpg
images/newfoundland_137.jpg
images/american_pit_bull_terrier_72.jpg
images/pug_194.jpg
images/yorkshire_terrier_124.jpg
images/pomeranian_173.jpg
Firstly, let's select TensorFlow version 2.x in colab

%tensorflow_version 2.x
import tensorflow
tensorflow.__version__
Colab only includes TensorFlow 2.x; %tensorflow_version has no effect.
'2.8.2'
# Initialize the random number generator
import random
random.seed(0)

# Ignore the warnings
import warnings
warnings.filterwarnings("ignore")
Load the dataset
As we are using google colab, we need to mount the google drive to load the data file

DATASET_FOLDER = "/content/images"
TRAIN_CSV = "/content/train-2.csv"
VALIDATION_CSV = "/content/validation-3.csv"
Get training data
import numpy as np
import csv

IMAGE_SIZE = 128 # Image sizes can vary (128, 160, 192, 224). MobileNetV2 can also take 96

with open(TRAIN_CSV, "r") as f:
  
  y_train = np.zeros((sum(1 for line in f), 4))
  X_train = []
  f.seek(0)
  data = csv.reader(f, delimiter=',')
  for index, row in enumerate(data):
    for i, r in enumerate(row[1:7]):
      row[i+1] = int(r)
    path, image_height, image_width, x0, y0, x1, y1, _, _ = row       # Read image, its dimensions, BBox coords
    path = "./" + path.split('/')[-2] + "/" + path.split('/')[-1]
    y_train[index, 0] = x0 * IMAGE_SIZE / image_width                 # Normalize bounding box by image size
    y_train[index, 1] = y0 * IMAGE_SIZE / image_height                # Normalize bounding box by image size
    y_train[index, 2] = (x1 - x0) * IMAGE_SIZE / image_width          # Normalize bounding box by image size
    y_train[index, 3] = (y1 - y0) * IMAGE_SIZE / image_height         # Normalize bounding box by image size

    X_train.append(path)                                              # All training images in this list
X_train[:5]
['./images/Abyssinian_1.jpg',
 './images/Abyssinian_10.jpg',
 './images/Abyssinian_100.jpg',
 './images/Abyssinian_101.jpg',
 './images/Abyssinian_102.jpg']
Let's check how does the data look like
Fetching coordinates details

import cv2
# Pick a random image to check how it looks
filename = X_train[97]
unscaled = cv2.imread(filename)
region = y_train[97]
image_height, image_width, _ = unscaled.shape
x0 = int(region[0] * image_width / IMAGE_SIZE) # Scale the BBox
y0 = int(region[1] * image_height / IMAGE_SIZE)

x1 = int((region[0] + region[2]) * image_width / IMAGE_SIZE)
y1 = int((region[1] + region[3]) * image_height / IMAGE_SIZE)
Now, let's plot the image and the bounding box on top of it

import matplotlib.pyplot as plt
import matplotlib.patches as patches

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(unscaled)

# Create a Rectangle patch
rect = patches.Rectangle((x0, y0), x1 - x0, y1 - y0, linewidth=2, edgecolor='r', facecolor='none')

# Add the patch to the Axes
ax.add_patch(rect)

plt.show()

Back to data preparation
from PIL import Image
from tensorflow.keras.applications.mobilenet import preprocess_input

for i, f in enumerate(X_train):
  img = Image.open(f) # Read image
  img = img.resize((IMAGE_SIZE, IMAGE_SIZE)) # Resize image
  img = img.convert('RGB')

  X_train[i] = preprocess_input(np.array(img, dtype=np.float32)) # Convert to float32 array
  img.close()
X_train = np.array(X_train)
X_train.shape
(3006, 128, 128, 3)
y_train
array([[36.90666667, 23.04      , 19.62666667, 27.52      ],
       [24.576     , 26.88      , 73.728     , 47.616     ],
       [49.05583756, 18.176     , 59.77664975, 50.176     ],
       ...,
       [24.064     , 13.79640719, 72.704     , 86.99401198],
       [70.144     , 32.19161677, 32.768     , 47.13772455],
       [24.591133  , 15.872     , 71.56650246, 49.664     ]])
y_train.shape
(3006, 4)
with open(VALIDATION_CSV, "r") as f:
  
  y_val = np.zeros((sum(1 for line in f), 4))
  X_val = []
  f.seek(0)
  data = csv.reader(f, delimiter=',')
  for index, row in enumerate(data):
    for i, r in enumerate(row[1:7]):
      row[i+1] = int(r)
    path, image_height, image_width, x0, y0, x1, y1, _, _ = row     # Read image, its dimensions, BBox coords
    path = "./" + path.split('/')[-2] + "/" + path.split('/')[-1]
    y_val[index, 0] = x0 * IMAGE_SIZE / image_width                 # Normalize bounding box by image size
    y_val[index, 1] = y0 * IMAGE_SIZE / image_height                # Normalize bounding box by image size
    y_val[index, 2] = (x1 - x0) * IMAGE_SIZE / image_width          # Normalize bounding box by image size
    y_val[index, 3] = (y1 - y0) * IMAGE_SIZE / image_height         # Normalize bounding box by image size

    X_val.append(path)                                                # All training images in this list
X_val[:5]
['./images/Abyssinian_118.jpg',
 './images/Abyssinian_124.jpg',
 './images/Abyssinian_131.jpg',
 './images/Abyssinian_14.jpg',
 './images/Abyssinian_15.jpg']
for i, f in enumerate(X_val):
  img = Image.open(f) # Read image
  img = img.resize((IMAGE_SIZE, IMAGE_SIZE)) # Resize image
  img = img.convert('RGB')

  X_val[i] = preprocess_input(np.array(img, dtype=np.float32)) # Convert to float32 array
  img.close()
X_val = np.array(X_val)
X_val.shape
(680, 128, 128, 3)
y_val
array([[ 0.38438438,  8.704     , 98.4024024 , 68.864     ],
       [33.82582583, 24.064     , 45.74174174, 25.856     ],
       [ 6.99678457, 10.        , 77.78778135, 62.        ],
       ...,
       [52.48      , 36.18133333, 28.928     , 45.056     ],
       [24.832     ,  6.03141361, 49.408     , 76.06282723],
       [11.776     , 19.21921922, 67.84      , 88.02402402]])
y_val.shape
(680, 4)
Create the model
from tensorflow.keras.applications.mobilenet import MobileNet
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Conv2D, Reshape

ALPHA = 1.0 # Width hyper parameter for MobileNet (0.25, 0.5, 0.75, 1.0). Higher width means more accurate but slower

def create_model(trainable=True):
    model = MobileNet(input_shape=(IMAGE_SIZE, IMAGE_SIZE, 3), include_top=False, alpha=ALPHA) # Load pre-trained mobilenet
    # Do not include classification (top) layer

    # to freeze layers, except the new top layer, of course, which will be added below
    for layer in model.layers:
        layer.trainable = trainable

    # Add new top layer which is a conv layer of the same size as the previous layer so that only 4 coords of BBox can be output
    x0 = model.layers[-1].output
    x1 = Conv2D(4, kernel_size=4, name="coords")(x0)
    # In the line above kernel size should be 3 for img size 96, 4 for img size 128, 5 for img size 160 etc.
    x2 = Reshape((4,))(x1) # These are the 4 predicted coordinates of one BBox

    return Model(inputs=model.input, outputs=x2)
Define evaluation metric
def IOU(y_true, y_pred):
    intersections = 0
    unions = 0
    # set the types so we are sure what type we are using

    gt = y_true
    pred = y_pred
    # Compute interection of predicted (pred) and ground truth (gt) bounding boxes
    diff_width = np.minimum(gt[:,0] + gt[:,2], pred[:,0] + pred[:,2]) - np.maximum(gt[:,0], pred[:,0])
    diff_height = np.minimum(gt[:,1] + gt[:,3], pred[:,1] + pred[:,3]) - np.maximum(gt[:,1], pred[:,1])
    intersection = diff_width * diff_height

    # Compute union
    area_gt = gt[:,2] * gt[:,3]
    area_pred = pred[:,2] * pred[:,3]
    union = area_gt + area_pred - intersection

    # Compute intersection and union over multiple boxes
    for j, _ in enumerate(union):
      if union[j] > 0 and intersection[j] > 0 and union[j] >= intersection[j]:
        intersections += intersection[j]
        unions += union[j]

    # Compute IOU. Use epsilon to prevent division by zero
    iou = np.round(intersections / (unions + tensorflow.keras.backend.epsilon()), 4)
    # This must match the type used in py_func
    iou = iou.astype(np.float32)
    return iou
def IoU(y_true, y_pred):
    iou = tensorflow.py_function(IOU, [y_true, y_pred], Tout=tensorflow.float32)
    return iou
Initialize the model and print summary
model = create_model(False) # Arg is False, if you want to freeze lower layers for fast training (but low accuracy)
model.summary() # Print summary
Model: "model"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         [(None, 128, 128, 3)]     0         
_________________________________________________________________
conv1_pad (ZeroPadding2D)    (None, 129, 129, 3)       0         
_________________________________________________________________
conv1 (Conv2D)               (None, 64, 64, 32)        864       
_________________________________________________________________
conv1_bn (BatchNormalization (None, 64, 64, 32)        128       
_________________________________________________________________
conv1_relu (ReLU)            (None, 64, 64, 32)        0         
_________________________________________________________________
conv_dw_1 (DepthwiseConv2D)  (None, 64, 64, 32)        288       
_________________________________________________________________
conv_dw_1_bn (BatchNormaliza (None, 64, 64, 32)        128       
_________________________________________________________________
conv_dw_1_relu (ReLU)        (None, 64, 64, 32)        0         
_________________________________________________________________
conv_pw_1 (Conv2D)           (None, 64, 64, 64)        2048      
_________________________________________________________________
conv_pw_1_bn (BatchNormaliza (None, 64, 64, 64)        256       
_________________________________________________________________
conv_pw_1_relu (ReLU)        (None, 64, 64, 64)        0         
_________________________________________________________________
conv_pad_2 (ZeroPadding2D)   (None, 65, 65, 64)        0         
_________________________________________________________________
conv_dw_2 (DepthwiseConv2D)  (None, 32, 32, 64)        576       
_________________________________________________________________
conv_dw_2_bn (BatchNormaliza (None, 32, 32, 64)        256       
_________________________________________________________________
conv_dw_2_relu (ReLU)        (None, 32, 32, 64)        0         
_________________________________________________________________
conv_pw_2 (Conv2D)           (None, 32, 32, 128)       8192      
_________________________________________________________________
conv_pw_2_bn (BatchNormaliza (None, 32, 32, 128)       512       
_________________________________________________________________
conv_pw_2_relu (ReLU)        (None, 32, 32, 128)       0         
_________________________________________________________________
conv_dw_3 (DepthwiseConv2D)  (None, 32, 32, 128)       1152      
_________________________________________________________________
conv_dw_3_bn (BatchNormaliza (None, 32, 32, 128)       512       
_________________________________________________________________
conv_dw_3_relu (ReLU)        (None, 32, 32, 128)       0         
_________________________________________________________________
conv_pw_3 (Conv2D)           (None, 32, 32, 128)       16384     
_________________________________________________________________
conv_pw_3_bn (BatchNormaliza (None, 32, 32, 128)       512       
_________________________________________________________________
conv_pw_3_relu (ReLU)        (None, 32, 32, 128)       0         
_________________________________________________________________
conv_pad_4 (ZeroPadding2D)   (None, 33, 33, 128)       0         
_________________________________________________________________
conv_dw_4 (DepthwiseConv2D)  (None, 16, 16, 128)       1152      
_________________________________________________________________
conv_dw_4_bn (BatchNormaliza (None, 16, 16, 128)       512       
_________________________________________________________________
conv_dw_4_relu (ReLU)        (None, 16, 16, 128)       0         
_________________________________________________________________
conv_pw_4 (Conv2D)           (None, 16, 16, 256)       32768     
_________________________________________________________________
conv_pw_4_bn (BatchNormaliza (None, 16, 16, 256)       1024      
_________________________________________________________________
conv_pw_4_relu (ReLU)        (None, 16, 16, 256)       0         
_________________________________________________________________
conv_dw_5 (DepthwiseConv2D)  (None, 16, 16, 256)       2304      
_________________________________________________________________
conv_dw_5_bn (BatchNormaliza (None, 16, 16, 256)       1024      
_________________________________________________________________
conv_dw_5_relu (ReLU)        (None, 16, 16, 256)       0         
_________________________________________________________________
conv_pw_5 (Conv2D)           (None, 16, 16, 256)       65536     
_________________________________________________________________
conv_pw_5_bn (BatchNormaliza (None, 16, 16, 256)       1024      
_________________________________________________________________
conv_pw_5_relu (ReLU)        (None, 16, 16, 256)       0         
_________________________________________________________________
conv_pad_6 (ZeroPadding2D)   (None, 17, 17, 256)       0         
_________________________________________________________________
conv_dw_6 (DepthwiseConv2D)  (None, 8, 8, 256)         2304      
_________________________________________________________________
conv_dw_6_bn (BatchNormaliza (None, 8, 8, 256)         1024      
_________________________________________________________________
conv_dw_6_relu (ReLU)        (None, 8, 8, 256)         0         
_________________________________________________________________
conv_pw_6 (Conv2D)           (None, 8, 8, 512)         131072    
_________________________________________________________________
conv_pw_6_bn (BatchNormaliza (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_pw_6_relu (ReLU)        (None, 8, 8, 512)         0         
_________________________________________________________________
conv_dw_7 (DepthwiseConv2D)  (None, 8, 8, 512)         4608      
_________________________________________________________________
conv_dw_7_bn (BatchNormaliza (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_dw_7_relu (ReLU)        (None, 8, 8, 512)         0         
_________________________________________________________________
conv_pw_7 (Conv2D)           (None, 8, 8, 512)         262144    
_________________________________________________________________
conv_pw_7_bn (BatchNormaliza (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_pw_7_relu (ReLU)        (None, 8, 8, 512)         0         
_________________________________________________________________
conv_dw_8 (DepthwiseConv2D)  (None, 8, 8, 512)         4608      
_________________________________________________________________
conv_dw_8_bn (BatchNormaliza (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_dw_8_relu (ReLU)        (None, 8, 8, 512)         0         
_________________________________________________________________
conv_pw_8 (Conv2D)           (None, 8, 8, 512)         262144    
_________________________________________________________________
conv_pw_8_bn (BatchNormaliza (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_pw_8_relu (ReLU)        (None, 8, 8, 512)         0         
_________________________________________________________________
conv_dw_9 (DepthwiseConv2D)  (None, 8, 8, 512)         4608      
_________________________________________________________________
conv_dw_9_bn (BatchNormaliza (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_dw_9_relu (ReLU)        (None, 8, 8, 512)         0         
_________________________________________________________________
conv_pw_9 (Conv2D)           (None, 8, 8, 512)         262144    
_________________________________________________________________
conv_pw_9_bn (BatchNormaliza (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_pw_9_relu (ReLU)        (None, 8, 8, 512)         0         
_________________________________________________________________
conv_dw_10 (DepthwiseConv2D) (None, 8, 8, 512)         4608      
_________________________________________________________________
conv_dw_10_bn (BatchNormaliz (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_dw_10_relu (ReLU)       (None, 8, 8, 512)         0         
_________________________________________________________________
conv_pw_10 (Conv2D)          (None, 8, 8, 512)         262144    
_________________________________________________________________
conv_pw_10_bn (BatchNormaliz (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_pw_10_relu (ReLU)       (None, 8, 8, 512)         0         
_________________________________________________________________
conv_dw_11 (DepthwiseConv2D) (None, 8, 8, 512)         4608      
_________________________________________________________________
conv_dw_11_bn (BatchNormaliz (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_dw_11_relu (ReLU)       (None, 8, 8, 512)         0         
_________________________________________________________________
conv_pw_11 (Conv2D)          (None, 8, 8, 512)         262144    
_________________________________________________________________
conv_pw_11_bn (BatchNormaliz (None, 8, 8, 512)         2048      
_________________________________________________________________
conv_pw_11_relu (ReLU)       (None, 8, 8, 512)         0         
_________________________________________________________________
conv_pad_12 (ZeroPadding2D)  (None, 9, 9, 512)         0         
_________________________________________________________________
conv_dw_12 (DepthwiseConv2D) (None, 4, 4, 512)         4608      
_________________________________________________________________
conv_dw_12_bn (BatchNormaliz (None, 4, 4, 512)         2048      
_________________________________________________________________
conv_dw_12_relu (ReLU)       (None, 4, 4, 512)         0         
_________________________________________________________________
conv_pw_12 (Conv2D)          (None, 4, 4, 1024)        524288    
_________________________________________________________________
conv_pw_12_bn (BatchNormaliz (None, 4, 4, 1024)        4096      
_________________________________________________________________
conv_pw_12_relu (ReLU)       (None, 4, 4, 1024)        0         
_________________________________________________________________
conv_dw_13 (DepthwiseConv2D) (None, 4, 4, 1024)        9216      
_________________________________________________________________
conv_dw_13_bn (BatchNormaliz (None, 4, 4, 1024)        4096      
_________________________________________________________________
conv_dw_13_relu (ReLU)       (None, 4, 4, 1024)        0         
_________________________________________________________________
conv_pw_13 (Conv2D)          (None, 4, 4, 1024)        1048576   
_________________________________________________________________
conv_pw_13_bn (BatchNormaliz (None, 4, 4, 1024)        4096      
_________________________________________________________________
conv_pw_13_relu (ReLU)       (None, 4, 4, 1024)        0         
_________________________________________________________________
coords (Conv2D)              (None, 1, 1, 4)           65540     
_________________________________________________________________
reshape (Reshape)            (None, 4)                 0         
=================================================================
Total params: 3,294,404
Trainable params: 65,540
Non-trainable params: 3,228,864
_________________________________________________________________
Compile the model
loss: "mean_squared_error"
metrics: IoU
optimizer: "adam"
# Compile the model
model.compile(loss="mean_squared_error", optimizer="adam", metrics=[IoU]) # Regression loss is MSE
Training the model
Fit the model to the dataset

Use early stopping
fit the model
give train data - training features and labels
batch size: 32
epochs: 10
give validation data - testing features and labels
# Use earlystopping
callback = tensorflow.keras.callbacks.EarlyStopping(monitor='val_IoU', patience=5, min_delta=0.01)

# Fit the model
model.fit(X_train, y_train, validation_data=(X_val, y_val), epochs=10, batch_size=32, callbacks=[callback])
Train on 3006 samples, validate on 680 samples
Epoch 1/10
3006/3006 [==============================] - 10s 3ms/sample - loss: 299.8418 - IoU: 0.4735 - val_loss: 153.1216 - val_IoU: 0.5892
Epoch 2/10
3006/3006 [==============================] - 7s 2ms/sample - loss: 106.6150 - IoU: 0.6242 - val_loss: 131.1321 - val_IoU: 0.5983
Epoch 3/10
3006/3006 [==============================] - 7s 2ms/sample - loss: 80.9270 - IoU: 0.6609 - val_loss: 186.9570 - val_IoU: 0.5754
Epoch 4/10
3006/3006 [==============================] - 6s 2ms/sample - loss: 69.1363 - IoU: 0.6810 - val_loss: 115.1731 - val_IoU: 0.6152
Epoch 5/10
3006/3006 [==============================] - 6s 2ms/sample - loss: 53.9960 - IoU: 0.7111 - val_loss: 116.5636 - val_IoU: 0.6150
Epoch 6/10
3006/3006 [==============================] - 7s 2ms/sample - loss: 47.9771 - IoU: 0.7221 - val_loss: 126.2475 - val_IoU: 0.6100
Epoch 7/10
3006/3006 [==============================] - 7s 2ms/sample - loss: 43.1321 - IoU: 0.7352 - val_loss: 104.3219 - val_IoU: 0.6166
Epoch 8/10
3006/3006 [==============================] - 6s 2ms/sample - loss: 40.0409 - IoU: 0.7464 - val_loss: 124.4151 - val_IoU: 0.6125
Final loss and accuracy
model.evaluate(X_val, y_val)
680/680 [==============================] - 1s 2ms/sample - loss: 124.4151 - IoU: 0.6125
[124.41511876723345, 0.6125363]
Test the model on an image from test data
# Pick a test image, run model, show image, and show predicted bounding box overlaid on the image
filename = './images/shiba_inu_163.jpg'

unscaled = cv2.imread(filename) # Original image for display
image_height, image_width, _ = unscaled.shape
image = cv2.resize(unscaled, (IMAGE_SIZE, IMAGE_SIZE)) # Rescaled image to run the network
feat_scaled = preprocess_input(np.array(image, dtype=np.float32))
print ("Size of original input: ", image.shape)
print("-------------------------------")
print("Size of scaled input: ", feat_scaled.shape)
Size of original input:  (128, 128, 3)
-------------------------------
Size of scaled input:  (128, 128, 3)
region = model.predict(x=np.array([feat_scaled]))[0] # Predict the BBox
Fetching coordinates details

x0 = int(region[0] * image_width / IMAGE_SIZE) # Scale the BBox
y0 = int(region[1] * image_height / IMAGE_SIZE)

x1 = int((region[0] + region[2]) * image_width / IMAGE_SIZE)
y1 = int((region[1] + region[3]) * image_height / IMAGE_SIZE)
Now, let's plot the image and the bounding box on top of it

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(unscaled)

# Create a Rectangle patch
rect = patches.Rectangle((x0, y0), x1 - x0, y1 - y0, linewidth=2, edgecolor='r', facecolor='none')

# Add the patch to the Axes
ax.add_patch(rect)

plt.show()

# Pick a test image, run model, show image, and show predicted bounding box overlaid on the image
filename = './images/Abyssinian_14.jpg'

unscaled = cv2.imread(filename) # Original image for display
image_height, image_width, _ = unscaled.shape
image = cv2.resize(unscaled, (IMAGE_SIZE, IMAGE_SIZE)) # Rescaled image to run the network
feat_scaled = preprocess_input(np.array(image, dtype=np.float32))
region = model.predict(x=np.array([feat_scaled]))[0] # Predict the BBox
Fetching coordinates details

x0 = int(region[0] * image_width / IMAGE_SIZE) # Scale the BBox
y0 = int(region[1] * image_height / IMAGE_SIZE)

x1 = int((region[0] + region[2]) * image_width / IMAGE_SIZE)
y1 = int((region[1] + region[3]) * image_height / IMAGE_SIZE)
Now, let's plot the image and the bounding box on top of it

# Create figure and axes
fig,ax = plt.subplots(1)

# Display the image
ax.imshow(unscaled)

# Create a Rectangle patch
rect = patches.Rectangle((x0, y0), x1 - x0, y1 - y0, linewidth=2, edgecolor='r', facecolor='none')

# Add the patch to the Axes
ax.add_patch(rect)

plt.show()
